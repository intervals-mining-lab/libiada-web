@model SequenceGroup

@{
    ViewBag.Title = "Sequences group";
}

<h2>@ViewBag.Title</h2>

@Html.Partial("_AngularControllerInitializer", "SequenceGroupsController")

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal" ng-controller="sequenceGroupsCtrl">
        <h4>SequenceGroup</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        @Html.Partial("_NatureSelect")
        <div class="form-group">
            <label class="control-label col-md-2">Sequence group type</label>
            <div class="col-md-10">
                <select class="form-control"
                        ng-options="n.Value as n.Text for n in sequenceGroupTypes | filter:{ Nature: nature }"
                        ng-model="sequenceGroupType">
                    <option value="">-- None --</option>
                </select>
                <input type="hidden" name="SequenceGroupType" ng-value="sequenceGroupType" />
            </div>
        </div>
        <matters-table matters="matters"
                       nature="nature"
                       groups="groups"
                       sequence-types="sequenceTypes"
                       maximum-selected-matters="::maximumSelectedMatters"
                       selected-matters="selectedMatters">
        </matters-table>

        <div class="form-group">
            <div class="col-md-12">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
