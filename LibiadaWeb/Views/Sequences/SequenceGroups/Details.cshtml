@using LibiadaCore.Extensions
@model SequenceGroup

@{
    ViewBag.Title = "Sequences group";
}

<h2>@ViewBag.Title</h2>

<div>
    <h4>SequenceGroup</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>@Html.DisplayNameFor(model => model.Name)</dt>
        <dd>@Html.DisplayFor(model => model.Name)</dd>

        <dt>@Html.DisplayNameFor(model => model.Nature)</dt>
        <dd>@Html.DisplayFor(model => model.Nature)</dd>

        <dt>@Html.DisplayNameFor(model => model.SequenceGroupType)</dt>
        <dd>@Html.DisplayFor(model => model.SequenceGroupType)</dd>

        <dt>@Html.DisplayNameFor(model => model.Creator)</dt>
        <dd>@Html.DisplayFor(model => model.Creator.UserName)</dd>

        <dt>@Html.DisplayNameFor(model => model.Created)</dt>
        <dd>@Html.DisplayFor(model => model.Created)</dd>

        <dt>@Html.DisplayNameFor(model => model.Modifier)</dt>
        <dd>@Html.DisplayFor(model => model.Modifier.UserName)</dd>

        <dt>@Html.DisplayNameFor(model => model.Modified)</dt>
        <dd>@Html.DisplayFor(model => model.Modified)</dd>
    </dl>
</div>
@if (Model.Matters.Count > 0)
{
    <table class="table table-bordered table-hover">
        <thead>
            <tr>
                <th>@(Html.DisplayNameFor(model => model.Matters.First().Name))</th>
                <th>@(Html.DisplayNameFor(model => model.Matters.First().Group))</th>
                <th>@(Html.DisplayNameFor(model => model.Matters.First().SequenceType))</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var matter in Model.Matters)
            {
                <tr>
                    <td>@matter.Name</td>
                    <td>@matter.Group.GetDisplayValue()</td>
                    <td>@matter.SequenceType.GetDisplayValue()</td>
                </tr>
            }
        </tbody>
    </table>
}

<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |
    @Html.ActionLink("Back to List", "Index")
</p>
