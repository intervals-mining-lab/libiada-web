@using Libiada.Web.Extensions
@using Libiada.Web.Helpers
@model CombinedSequenceEntity

@{
    ViewBag.Title = "Create";
}

@{
    await Html.RenderPartialAsync("_AngularControllerInitializer", "ResearchObjectSequenceCreate");
}

<h2>@ViewBag.Title</h2>

<div>@ViewBag.ErrorMessage</div>

@using (Html.BeginForm("Create", "ResearchObjects", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div ng-controller="ResearchObjectSequenceCreateCtrl">
        <h4>Research object and sequence parameters</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @if (User.IsAdmin())
        {
            <div class="row mb-1">
                @Html.LabelFor(model => model.ResearchObject.Nature, new { @class = "col-form-label col-md-2" })
                <div class="col-md-10">
                    <select class="form-select"
                            ng-model="nature"
                            ng-options="n.Value as n.Text for n in ::natures"
                            ng-change="filterByNature()"
                            ng-init="filterByNature()"></select>
                    <input type="hidden" name="ResearchObject.Nature" ng-value="nature" />
                    @Html.ValidationMessageFor(model => model.ResearchObject.Nature, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row mb-1" ng-hide="nature == @((byte)Nature.Music)">
                @Html.LabelFor(model => model.Notation, new { @class = "col-form-label col-md-2" })
                <div class="col-md-10">
                    <select class="form-select"
                            ng-options="n.Value as n.Text for n in notations | filter:{ Nature: nature }"
                            ng-model="notationId"></select>
                    <input type="hidden" name="Notation" ng-value="notationId" />
                    @Html.ValidationMessageFor(model => model.Notation, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        else
        {
            <div ng-hide="true" ng-init="filterByNature()"></div>
            <input type="hidden" name="Notation" ng-value="notationId" />
            <input type="hidden" name="ResearchObject.Nature" ng-value="nature" />
        }

        <div class="row mb-1">
            @Html.LabelFor(model => model.ResearchObject.Name, new { @class = "col-form-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ResearchObject.Name, new { htmlAttributes = new { @class = "form-control", ng_model = "name" } })
                @Html.ValidationMessageFor(model => model.ResearchObject.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row mb-1">
            @Html.LabelFor(model => model.ResearchObject.Description, new { @class = "col-form-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ResearchObject.Description, new { htmlAttributes = new { @class = "form-control", ng_model = "description" } })
                @Html.ValidationMessageFor(model => model.ResearchObject.Description, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row mb-1">
            @Html.LabelFor(model => model.ResearchObject.Group, new { @class = "col-form-label col-md-2" })
            <div class="col-md-10">
                <select class="form-select"
                        ng-options="g.Value as g.Text for g in groups | filter:{ Nature: nature }"
                        ng-model="group"></select>
                <input type="hidden" name="ResearchObject.Group" ng-value="group" />
                @Html.ValidationMessageFor(model => model.ResearchObject.Group, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row mb-1">
            @Html.LabelFor(model => model.ResearchObject.SequenceType, new { @class = "col-form-label col-md-2" })
            <div class="col-md-10">
                <select class="form-select"
                        ng-options="g.Value as g.Text for g in sequenceTypes | filter:{ Nature: nature }"
                        ng-model="sequenceType"></select>
                <input type="hidden" name="ResearchObject.SequenceType" ng-value="sequenceType" />
                @Html.ValidationMessageFor(model => model.ResearchObject.SequenceType, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row mb-1">
            @Html.LabelFor(model => model.ResearchObject.Multisequence, new { @class = "col-form-label col-md-2" })
            <div class="col-md-10">
                <select class="form-select"
                        ng-options="ms.Value as ms.Text for ms in multisequences | filter:{ Nature: nature }"
                        ng-model="researchObject.MultisequenceId">
                    <option value="">-- None --</option>
                </select>
                <input type="hidden" name="ResearchObject.MultisequenceId" ng-value="researchObject.MultisequenceId" />
                @Html.ValidationMessageFor(model => model.ResearchObject.Multisequence, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row mb-1">
            @Html.LabelFor(model => model.ResearchObject.MultisequenceNumber, new { @class = "col-form-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ResearchObject.MultisequenceNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ResearchObject.MultisequenceNumber, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row mb-1">
            @Html.LabelFor(model => model.ResearchObject.CollectionCountry, new { @class = "col-form-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ResearchObject.CollectionCountry, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ResearchObject.CollectionCountry, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row mb-1">
            @Html.LabelFor(model => model.ResearchObject.CollectionDate, new { @class = "col-form-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ResearchObject.CollectionDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ResearchObject.CollectionDate, "", new { @class = "text-danger" })
            </div>
        </div>
        <local-file></local-file>
        <div ng-show="nature == @((byte)Nature.Genetic)">
            <div class="row mb-1">
                @Html.LabelFor(model => model.RemoteDb, new { @class = "col-form-label col-md-2" })
                <div class="col-md-10">
                    <select class="form-select"
                            ng-options="r.Value as r.Text for r in remoteDbs | filter: { Nature: nature }"
                            ng-model="remoteDbId">
                        <option value="">None</option>
                    </select>
                    <input type="hidden" name="RemoteDb" ng-value="remoteDbId" />
                    @Html.ValidationMessageFor(model => model.RemoteDb, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row mb-1" ng-show="isRemoteDbDefined()">
                @Html.LabelFor(model => model.RemoteId, new { @class = "col-form-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.RemoteId, new { htmlAttributes = new { @class = "form-control", ng_model = "remoteId", ng_change = "remoteIdChanged(remoteId)" } })
                    @Html.ValidationMessageFor(model => model.RemoteId, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div ng-switch="nature">
            <div ng-switch-when="@((byte)Nature.Genetic)">
                <div class="form-check">
                    <input type="checkbox"
                           class="form-check-input"
                           name="partial"
                           id="partial"
                           value="true" />
                    <input type="hidden" name="partial" value="false" />
                    <label class="form-check-label" for="partial">
                        Sequence is partial (incomplete)
                    </label>
                </div>
            </div>
            <div ng-switch-when="@((byte)Nature.Literature)">
                <div class="row mb-1">
                    <label class="col-form-label col-md-2" for="language">Language of literary work:</label>
                    <div class="col-md-10">
                        <select class="form-select"
                                ng-model="languageId"
                                ng-options="l.Value as l.Text for l in languages"
                                id="language"></select>
                        <input type="hidden" name="language" ng-value="languageId" />
                        @Html.ValidationMessage("language", "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-check">
                    <input type="checkbox"
                           class="form-check-input"
                           name="original"
                           id="original"
                           ng-model="original"
                           value="true" />
                    <input type="hidden" name="original" value="false" />
                    <label class="form-check-label" for="original">
                        Literary work is in original language (not in translation)
                    </label>
                </div>
                <div class="row mb-1" ng-hide="original">
                    <label class="col-form-label col-md-2" for="translator">Translator:</label>
                    <div class="col-md-10">
                        <select class="form-select"
                                ng-model="translatorId"
                                ng-options="t.Value as t.Text for t in translators"
                                id="translator"></select>
                        <input type="hidden" name="translator" ng-value="translatorId" />
                        @Html.ValidationMessage("translator", "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div ng-switch-when="@((byte)Nature.Music)">
            </div>
            <div ng-switch-when="@((byte)Nature.MeasurementData)">
                <div class="row mb-1">
                    <label class="col-form-label col-md-2" for="precision">Precision of elements:</label>
                    <div class="col-md-10">
                        <input class="form-control" name="precision" id="precision" type="number" value="0" min="0" max="6" />
                        @Html.ValidationMessage("precision", "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div ng-switch-when="@((byte)Nature.Image)">
            </div>
        </div>
        <div class="row mb-1">
            <div class="col-md-10">
                <input type="submit" value="Create" class="btn btn-secondary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script src="~/js/Angular/Components/localFile.js" asp-append-version="true"></script>
}
