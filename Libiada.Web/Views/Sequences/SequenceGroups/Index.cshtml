@using Libiada.Core.Extensions
@model IEnumerable<SequenceGroup>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table table-bordered table-hover">
    <tr>
        <th>@Html.DisplayNameFor(model => model.Name)</th>
        <th>@Html.DisplayNameFor(model => model.Nature)</th>
        <th>@Html.DisplayNameFor(model => model.SequenceGroupType)</th>
         <th>@Html.DisplayNameFor(model => model.SequenceType)</th>
        <th>@Html.DisplayNameFor(model => model.Group)</th>
        <th>@Html.DisplayNameFor(model => model.Creator)</th>
        <th>@Html.DisplayNameFor(model => model.Created)</th>
        <th>@Html.DisplayNameFor(model => model.Modifier)</th>
        <th>@Html.DisplayNameFor(model => model.Modified)</th>
        <th />
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>@Html.DisplayFor(modelItem => item.Name)</td>
            <td>@item.Nature.GetDisplayValue()</td>
            <td>@(item.SequenceGroupType == null ? "" : ((SequenceGroupType)item.SequenceGroupType).GetDisplayValue())</td>
            <td>@item.SequenceType.GetDisplayValue()</td>
            <td>@item.Group.GetDisplayValue()</td>
            <td>@Html.DisplayFor(modelItem => item.Creator.UserName)</td>
            <td>@Html.DisplayFor(modelItem => item.Created)</td>
            <td>@Html.DisplayFor(modelItem => item.Modifier.UserName)</td>
            <td>@Html.DisplayFor(modelItem => item.Modified)</td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.Id })
            </td>
        </tr>
    }

</table>
